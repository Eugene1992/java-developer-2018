create table employee (
  employee_id   int primary key,
  name          varchar(20),
  job           varchar(20),
  manager_id    int /*references employee (employee_id)*/,
  hiredate      date,
  salary        int,
  cpmmissions   int,
  department_id int
);

INSERT INTO employee VALUES (7369, 'SMITH', 'CLERK', 7902, TO_DATE('17-12-1980', 'DD-MM-YYYY'), 800, NULL, 20);
INSERT INTO employee VALUES (7499, 'ALLEN', 'SALESMAN', 7698, TO_DATE('20-02-1981', 'DD-MM-YYYY'), 1600, 300, 30);
INSERT INTO employee VALUES (7521, 'WARD', 'SALESMAN', 7698, TO_DATE('22-02-1981', 'DD-MM-YYYY'), 1250, 500, 30);
INSERT INTO employee VALUES (7566, 'JONES', 'MANAGER', 7839, TO_DATE('2-04-1981', 'DD-MM-YYYY'), 2975, NULL, 20);
INSERT INTO employee VALUES (7654, 'MARTIN', 'SALESMAN', 7698, TO_DATE('28-09-1981', 'DD-MM-YYYY'), 1250, 1400, 30);
INSERT INTO employee VALUES (7698, 'BLAKE', 'MANAGER', 7839, TO_DATE('1-05-1981', 'DD-MM-YYYY'), 2850, NULL, 30);
INSERT INTO employee VALUES (7782, 'CLARK', 'MANAGER', 7839, TO_DATE('9-06-1981', 'DD-MM-YYYY'), 2450, NULL, 10);
INSERT INTO employee VALUES (7788, 'SCOTT', 'ANALYST', 7566, TO_DATE('09-12-1982', 'DD-MM-YYYY'), 3000, NULL, 20);
INSERT INTO employee VALUES (7839, 'KING', 'PRESIDENT', NULL, TO_DATE('17-11-1981', 'DD-MM-YYYY'), 5000, NULL, 10);
INSERT INTO employee VALUES (7844, 'TURNER', 'SALESMAN', 7698, TO_DATE('8-09-1981', 'DD-MM-YYYY'), 1500, 0, 30);
INSERT INTO employee VALUES (7876, 'ADAMS', 'CLERK', 7788, TO_DATE('12-01-1983', 'DD-MM-YYYY'), 1100, NULL, 20);
INSERT INTO employee VALUES (7900, 'JAMES', 'CLERK', 7698, TO_DATE('3-12-1981', 'DD-MM-YYYY'), 950, NULL, 30);
INSERT INTO employee VALUES (7902, 'FORD', 'ANALYST', 7566, TO_DATE('3-12-1981', 'DD-MM-YYYY'), 3000, NULL, 20);
INSERT INTO employee VALUES (7934, 'MILLER', 'CLERK', 7782, TO_DATE('23-01-1982', 'DD-MM-YYYY'), 1300, NULL, 10);



ALTER TABLE employee
  ADD CONSTRAINT employee FOREIGN KEY (manager_id) REFERENCES employee (employee_id);

create table department (
  department_id int primary key,
  name          varchar(20),
  location      varchar(20)
);
INSERT INTO department VALUES (10, 'ACCOUNTING', 'NEW YORK');
INSERT INTO department VALUES (20, 'RESEARCH', 'DALLAS');
INSERT INTO department VALUES (30, 'SALES', 'CHICAGO');
INSERT INTO department VALUES (40, 'OPERATIONS', 'BOSTON');

/*1. Write a query to display the name, department number, and department name for all employees.*/
select e.name, d.department_id, d.name as department
from employee e
left join department d on e.department_id= d.department_id
order by d.department_id

/*2.  Create a unique listing of all jobs that are in department 30.*/
select distinct  job
from employee e
left join department d on e.department_id= d.department_id
where d.department_id = 30

/*3. Write a query to display the employee name, department name, and location of all
employees who earn a commission.*/
select e.name, d.name as department, d.location from
employee e left join department d on d.department_id =e.department_id
where e.cpmmissions is not null

/*4. Display the employee name and department name for all employees who have an A in their name. */
select e.name, d.name as department
from employee e
left join department d on e.department_id = d.department_id
where e.name like '%A%'

/*5. Write a query to display the name, job, department number, and department name for all employees who work in DALLAS.*/
select e.name, e.job, d.department_id, d.name
from employee e left join department d on e.department_id = d.department_id
where d.location = 'DALLAS'

/*6. Display the employee name and employee number along with their manager’s name and manager number.
     Label the columns Employee, Emp#, Manager, and Mgr#, respectively*/
select
  e.name as Employee,
  e.employee_id as Empnum,
  e.manager_id as Mgrnum,
  e1.name as Manager
from employee e left join employee e1 on e.manager_id = e1.employee_id
where e.manager_id is not null

/*7. Modify prvious query to display all employees including King, who has no manager.*/
select
  e.name as Employee,
  e.employee_id as Empnum,
  e.manager_id as Mgrnum,
  e1.name as Manager
from employee e left join employee e1 on e.manager_id = e1.employee_id

/*8. Create a query that will display the employee name, department number, and all the
employees that work in the same department as a given employee. Give each column an appropriate label.*/
select
  e.department_id,
  e.name,
  e1.name
from
  employee e left join employee e1 on e.department_id = e1.department_id
where e.name<> e1.name

/*9.  Check the structure of the SALGRADE table. Create a query that will display the name,
job, department name, salary, and grade for all employees.*/
select
  e.name,
  e.job,
  d.name as department,
  e.salary,
  CASE WHEN e2.manager_id is not null THEN 1
       WHEN e1.manager_id is not null and e2.manager_id is null then 2
       WHEN e.manager_id is not null and e1.manager_id is null and e2.manager_id is null then 3
       WHEN e.manager_id is null and e1.manager_id is null and e2.manager_id is null then 4
END as grade
from employee e left join department d on e.department_id = d.department_id
left join employee e1 on e.manager_id = e1.employee_id
left join employee e2 on e1.manager_id = e2.employee_id
left join employee e3 on e2.manager_id = e3.employee_id



/*10. Create a query to display the name and hire date of any employee hired BWEFORE after employee Blake.*/
select
  e.name,
  e.hiredate
from employee e
where cast(e.hiredate as date) < cast((select hiredate from employee where name = 'BLAKE') as date)

/*11. Display all employees’ names and hire dates along with their manager’s name and hire date for
all employees who were hired before their managers. Label the columns Employee, Emp Hiredate, Manager,
and Mgr Hiredate, respectively.*/
select
  e.name, e.hiredate,
  e1.name as manager,
  e1.hiredate
from employee e left join employee e1 on e.manager_id = e1.employee_id
where e.hiredate< e1.hiredate